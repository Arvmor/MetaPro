/**
 * Bundled by jsDelivr using Rollup v2.79.1 and Terser v5.19.2.
 * Original file: /npm/bip39@3.1.0/src/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var o = "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {}
  , i = []
  , s = []
  , f = "undefined" != typeof Uint8Array ? Uint8Array : Array
  , u = !1;
function a() {
    u = !0;
    for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", r = 0; r < 64; ++r)
        i[r] = t[r],
        s[t.charCodeAt(r)] = r;
    s["-".charCodeAt(0)] = 62,
    s["_".charCodeAt(0)] = 63
}
function h(t, r, e) {
    for (var n, o, s = [], f = r; f < e; f += 3)
        n = (t[f] << 16) + (t[f + 1] << 8) + t[f + 2],
        s.push(i[(o = n) >> 18 & 63] + i[o >> 12 & 63] + i[o >> 6 & 63] + i[63 & o]);
    return s.join("")
}
function c(t) {
    var r;
    u || a();
    for (var e = t.length, n = e % 3, o = "", s = [], f = 16383, c = 0, l = e - n; c < l; c += f)
        s.push(h(t, c, c + f > l ? l : c + f));
    return 1 === n ? (r = t[e - 1],
    o += i[r >> 2],
    o += i[r << 4 & 63],
    o += "==") : 2 === n && (r = (t[e - 2] << 8) + t[e - 1],
    o += i[r >> 10],
    o += i[r >> 4 & 63],
    o += i[r << 2 & 63],
    o += "="),
    s.push(o),
    s.join("")
}
function l(t, r, e, n, o) {
    var i, s, f = 8 * o - n - 1, u = (1 << f) - 1, a = u >> 1, h = -7, c = e ? o - 1 : 0, l = e ? -1 : 1, p = t[r + c];
    for (c += l,
    i = p & (1 << -h) - 1,
    p >>= -h,
    h += f; h > 0; i = 256 * i + t[r + c],
    c += l,
    h -= 8)
        ;
    for (s = i & (1 << -h) - 1,
    i >>= -h,
    h += n; h > 0; s = 256 * s + t[r + c],
    c += l,
    h -= 8)
        ;
    if (0 === i)
        i = 1 - a;
    else {
        if (i === u)
            return s ? NaN : 1 / 0 * (p ? -1 : 1);
        s += Math.pow(2, n),
        i -= a
    }
    return (p ? -1 : 1) * s * Math.pow(2, i - n)
}
function p(t, r, e, n, o, i) {
    var s, f, u, a = 8 * i - o - 1, h = (1 << a) - 1, c = h >> 1, l = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0, p = n ? 0 : i - 1, g = n ? 1 : -1, y = r < 0 || 0 === r && 1 / r < 0 ? 1 : 0;
    for (r = Math.abs(r),
    isNaN(r) || r === 1 / 0 ? (f = isNaN(r) ? 1 : 0,
    s = h) : (s = Math.floor(Math.log(r) / Math.LN2),
    r * (u = Math.pow(2, -s)) < 1 && (s--,
    u *= 2),
    (r += s + c >= 1 ? l / u : l * Math.pow(2, 1 - c)) * u >= 2 && (s++,
    u /= 2),
    s + c >= h ? (f = 0,
    s = h) : s + c >= 1 ? (f = (r * u - 1) * Math.pow(2, o),
    s += c) : (f = r * Math.pow(2, c - 1) * Math.pow(2, o),
    s = 0)); o >= 8; t[e + p] = 255 & f,
    p += g,
    f /= 256,
    o -= 8)
        ;
    for (s = s << o | f,
    a += o; a > 0; t[e + p] = 255 & s,
    p += g,
    s /= 256,
    a -= 8)
        ;
    t[e + p - g] |= 128 * y
}
var g = {}.toString
  , y = Array.isArray || function(t) {
    return "[object Array]" == g.call(t)
}
;
function d() {
    return m.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
}
function w(t, r) {
    if (d() < r)
        throw new RangeError("Invalid typed array length");
    return m.TYPED_ARRAY_SUPPORT ? (t = new Uint8Array(r)).__proto__ = m.prototype : (null === t && (t = new m(r)),
    t.length = r),
    t
}
function m(t, r, e) {
    if (!(m.TYPED_ARRAY_SUPPORT || this instanceof m))
        return new m(t,r,e);
    if ("number" == typeof t) {
        if ("string" == typeof r)
            throw new Error("If encoding is specified then the first argument must be a string");
        return A(this, t)
    }
    return v(this, t, r, e)
}
function v(t, r, e, n) {
    if ("number" == typeof r)
        throw new TypeError('"value" argument must not be a number');
    return "undefined" != typeof ArrayBuffer && r instanceof ArrayBuffer ? function(t, r, e, n) {
        if (r.byteLength,
        e < 0 || r.byteLength < e)
            throw new RangeError("'offset' is out of bounds");
        if (r.byteLength < e + (n || 0))
            throw new RangeError("'length' is out of bounds");
        r = void 0 === e && void 0 === n ? new Uint8Array(r) : void 0 === n ? new Uint8Array(r,e) : new Uint8Array(r,e,n);
        m.TYPED_ARRAY_SUPPORT ? (t = r).__proto__ = m.prototype : t = b(t, r);
        return t
    }(t, r, e, n) : "string" == typeof r ? function(t, r, e) {
        "string" == typeof e && "" !== e || (e = "utf8");
        if (!m.isEncoding(e))
            throw new TypeError('"encoding" must be a valid string encoding');
        var n = 0 | T(r, e);
        t = w(t, n);
        var o = t.write(r, e);
        o !== n && (t = t.slice(0, o));
        return t
    }(t, r, e) : function(t, r) {
        if (R(r)) {
            var e = 0 | _(r.length);
            return 0 === (t = w(t, e)).length || r.copy(t, 0, 0, e),
            t
        }
        if (r) {
            if ("undefined" != typeof ArrayBuffer && r.buffer instanceof ArrayBuffer || "length"in r)
                return "number" != typeof r.length || (n = r.length) != n ? w(t, 0) : b(t, r);
            if ("Buffer" === r.type && y(r.data))
                return b(t, r.data)
        }
        var n;
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
    }(t, r)
}
function E(t) {
    if ("number" != typeof t)
        throw new TypeError('"size" argument must be a number');
    if (t < 0)
        throw new RangeError('"size" argument must not be negative')
}
function A(t, r) {
    if (E(r),
    t = w(t, r < 0 ? 0 : 0 | _(r)),
    !m.TYPED_ARRAY_SUPPORT)
        for (var e = 0; e < r; ++e)
            t[e] = 0;
    return t
}
function b(t, r) {
    var e = r.length < 0 ? 0 : 0 | _(r.length);
    t = w(t, e);
    for (var n = 0; n < e; n += 1)
        t[n] = 255 & r[n];
    return t
}
function _(t) {
    if (t >= d())
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + d().toString(16) + " bytes");
    return 0 | t
}
function R(t) {
    return !(null == t || !t._isBuffer)
}
function T(t, r) {
    if (R(t))
        return t.length;
    if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(t) || t instanceof ArrayBuffer))
        return t.byteLength;
    "string" != typeof t && (t = "" + t);
    var e = t.length;
    if (0 === e)
        return 0;
    for (var n = !1; ; )
        switch (r) {
        case "ascii":
        case "latin1":
        case "binary":
            return e;
        case "utf8":
        case "utf-8":
        case void 0:
            return X(t).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return 2 * e;
        case "hex":
            return e >>> 1;
        case "base64":
            return $(t).length;
        default:
            if (n)
                return X(t).length;
            r = ("" + r).toLowerCase(),
            n = !0
        }
}
function P(t, r, e) {
    var n = !1;
    if ((void 0 === r || r < 0) && (r = 0),
    r > this.length)
        return "";
    if ((void 0 === e || e > this.length) && (e = this.length),
    e <= 0)
        return "";
    if ((e >>>= 0) <= (r >>>= 0))
        return "";
    for (t || (t = "utf8"); ; )
        switch (t) {
        case "hex":
            return q(this, r, e);
        case "utf8":
        case "utf-8":
            return j(this, r, e);
        case "ascii":
            return k(this, r, e);
        case "latin1":
        case "binary":
            return N(this, r, e);
        case "base64":
            return L(this, r, e);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return z(this, r, e);
        default:
            if (n)
                throw new TypeError("Unknown encoding: " + t);
            t = (t + "").toLowerCase(),
            n = !0
        }
}
function U(t, r, e) {
    var n = t[r];
    t[r] = t[e],
    t[e] = n
}
function S(t, r, e, n, o) {
    if (0 === t.length)
        return -1;
    if ("string" == typeof e ? (n = e,
    e = 0) : e > 2147483647 ? e = 2147483647 : e < -2147483648 && (e = -2147483648),
    e = +e,
    isNaN(e) && (e = o ? 0 : t.length - 1),
    e < 0 && (e = t.length + e),
    e >= t.length) {
        if (o)
            return -1;
        e = t.length - 1
    } else if (e < 0) {
        if (!o)
            return -1;
        e = 0
    }
    if ("string" == typeof r && (r = m.from(r, n)),
    R(r))
        return 0 === r.length ? -1 : B(t, r, e, n, o);
    if ("number" == typeof r)
        return r &= 255,
        m.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(t, r, e) : Uint8Array.prototype.lastIndexOf.call(t, r, e) : B(t, [r], e, n, o);
    throw new TypeError("val must be string, number or Buffer")
}
function B(t, r, e, n, o) {
    var i, s = 1, f = t.length, u = r.length;
    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
        if (t.length < 2 || r.length < 2)
            return -1;
        s = 2,
        f /= 2,
        u /= 2,
        e /= 2
    }
    function a(t, r) {
        return 1 === s ? t[r] : t.readUInt16BE(r * s)
    }
    if (o) {
        var h = -1;
        for (i = e; i < f; i++)
            if (a(t, i) === a(r, -1 === h ? 0 : i - h)) {
                if (-1 === h && (h = i),
                i - h + 1 === u)
                    return h * s
            } else
                -1 !== h && (i -= i - h),
                h = -1
    } else
        for (e + u > f && (e = f - u),
        i = e; i >= 0; i--) {
            for (var c = !0, l = 0; l < u; l++)
                if (a(t, i + l) !== a(r, l)) {
                    c = !1;
                    break
                }
            if (c)
                return i
        }
    return -1
}
function I(t, r, e, n) {
    e = Number(e) || 0;
    var o = t.length - e;
    n ? (n = Number(n)) > o && (n = o) : n = o;
    var i = r.length;
    if (i % 2 != 0)
        throw new TypeError("Invalid hex string");
    n > i / 2 && (n = i / 2);
    for (var s = 0; s < n; ++s) {
        var f = parseInt(r.substr(2 * s, 2), 16);
        if (isNaN(f))
            return s;
        t[e + s] = f
    }
    return s
}
function Y(t, r, e, n) {
    return tt(X(r, t.length - e), t, e, n)
}
function M(t, r, e, n) {
    return tt(function(t) {
        for (var r = [], e = 0; e < t.length; ++e)
            r.push(255 & t.charCodeAt(e));
        return r
    }(r), t, e, n)
}
function O(t, r, e, n) {
    return M(t, r, e, n)
}
function C(t, r, e, n) {
    return tt($(r), t, e, n)
}
function D(t, r, e, n) {
    return tt(function(t, r) {
        for (var e, n, o, i = [], s = 0; s < t.length && !((r -= 2) < 0); ++s)
            n = (e = t.charCodeAt(s)) >> 8,
            o = e % 256,
            i.push(o),
            i.push(n);
        return i
    }(r, t.length - e), t, e, n)
}
function L(t, r, e) {
    return 0 === r && e === t.length ? c(t) : c(t.slice(r, e))
}
function j(t, r, e) {
    e = Math.min(t.length, e);
    for (var n = [], o = r; o < e; ) {
        var i, s, f, u, a = t[o], h = null, c = a > 239 ? 4 : a > 223 ? 3 : a > 191 ? 2 : 1;
        if (o + c <= e)
            switch (c) {
            case 1:
                a < 128 && (h = a);
                break;
            case 2:
                128 == (192 & (i = t[o + 1])) && (u = (31 & a) << 6 | 63 & i) > 127 && (h = u);
                break;
            case 3:
                i = t[o + 1],
                s = t[o + 2],
                128 == (192 & i) && 128 == (192 & s) && (u = (15 & a) << 12 | (63 & i) << 6 | 63 & s) > 2047 && (u < 55296 || u > 57343) && (h = u);
                break;
            case 4:
                i = t[o + 1],
                s = t[o + 2],
                f = t[o + 3],
                128 == (192 & i) && 128 == (192 & s) && 128 == (192 & f) && (u = (15 & a) << 18 | (63 & i) << 12 | (63 & s) << 6 | 63 & f) > 65535 && u < 1114112 && (h = u)
            }
        null === h ? (h = 65533,
        c = 1) : h > 65535 && (h -= 65536,
        n.push(h >>> 10 & 1023 | 55296),
        h = 56320 | 1023 & h),
        n.push(h),
        o += c
    }
    return function(t) {
        var r = t.length;
        if (r <= x)
            return String.fromCharCode.apply(String, t);
        var e = ""
          , n = 0;
        for (; n < r; )
            e += String.fromCharCode.apply(String, t.slice(n, n += x));
        return e
    }(n)
}
m.TYPED_ARRAY_SUPPORT = void 0 === o.TYPED_ARRAY_SUPPORT || o.TYPED_ARRAY_SUPPORT,
d(),
m.poolSize = 8192,
m._augment = function(t) {
    return t.__proto__ = m.prototype,
    t
}
,
m.from = function(t, r, e) {
    return v(null, t, r, e)
}
,
m.TYPED_ARRAY_SUPPORT && (m.prototype.__proto__ = Uint8Array.prototype,
m.__proto__ = Uint8Array,
"undefined" != typeof Symbol && Symbol.species && m[Symbol.species]),
m.alloc = function(t, r, e) {
    return function(t, r, e, n) {
        return E(r),
        r <= 0 ? w(t, r) : void 0 !== e ? "string" == typeof n ? w(t, r).fill(e, n) : w(t, r).fill(e) : w(t, r)
    }(null, t, r, e)
}
,
m.allocUnsafe = function(t) {
    return A(null, t)
}
,
m.allocUnsafeSlow = function(t) {
    return A(null, t)
}
,
m.isBuffer = function(t) {
    return null != t && (!!t._isBuffer || rt(t) || function(t) {
        return "function" == typeof t.readFloatLE && "function" == typeof t.slice && rt(t.slice(0, 0))
    }(t))
}
,
m.compare = function(t, r) {
    if (!R(t) || !R(r))
        throw new TypeError("Arguments must be Buffers");
    if (t === r)
        return 0;
    for (var e = t.length, n = r.length, o = 0, i = Math.min(e, n); o < i; ++o)
        if (t[o] !== r[o]) {
            e = t[o],
            n = r[o];
            break
        }
    return e < n ? -1 : n < e ? 1 : 0
}
,
m.isEncoding = function(t) {
    switch (String(t).toLowerCase()) {
    case "hex":
    case "utf8":
    case "utf-8":
    case "ascii":
    case "latin1":
    case "binary":
    case "base64":
    case "ucs2":
    case "ucs-2":
    case "utf16le":
    case "utf-16le":
        return !0;
    default:
        return !1
    }
}
,
m.concat = function(t, r) {
    if (!y(t))
        throw new TypeError('"list" argument must be an Array of Buffers');
    if (0 === t.length)
        return m.alloc(0);
    var e;
    if (void 0 === r)
        for (r = 0,
        e = 0; e < t.length; ++e)
            r += t[e].length;
    var n = m.allocUnsafe(r)
      , o = 0;
    for (e = 0; e < t.length; ++e) {
        var i = t[e];
        if (!R(i))
            throw new TypeError('"list" argument must be an Array of Buffers');
        i.copy(n, o),
        o += i.length
    }
    return n
}
,
m.byteLength = T,
m.prototype._isBuffer = !0,
m.prototype.swap16 = function() {
    var t = this.length;
    if (t % 2 != 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (var r = 0; r < t; r += 2)
        U(this, r, r + 1);
    return this
}
,
m.prototype.swap32 = function() {
    var t = this.length;
    if (t % 4 != 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (var r = 0; r < t; r += 4)
        U(this, r, r + 3),
        U(this, r + 1, r + 2);
    return this
}
,
m.prototype.swap64 = function() {
    var t = this.length;
    if (t % 8 != 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (var r = 0; r < t; r += 8)
        U(this, r, r + 7),
        U(this, r + 1, r + 6),
        U(this, r + 2, r + 5),
        U(this, r + 3, r + 4);
    return this
}
,
m.prototype.toString = function() {
    var t = 0 | this.length;
    return 0 === t ? "" : 0 === arguments.length ? j(this, 0, t) : P.apply(this, arguments)
}
,
m.prototype.equals = function(t) {
    if (!R(t))
        throw new TypeError("Argument must be a Buffer");
    return this === t || 0 === m.compare(this, t)
}
,
m.prototype.inspect = function() {
    var t = "";
    return this.length > 0 && (t = this.toString("hex", 0, 50).match(/.{2}/g).join(" "),
    this.length > 50 && (t += " ... ")),
    "<Buffer " + t + ">"
}
,
m.prototype.compare = function(t, r, e, n, o) {
    if (!R(t))
        throw new TypeError("Argument must be a Buffer");
    if (void 0 === r && (r = 0),
    void 0 === e && (e = t ? t.length : 0),
    void 0 === n && (n = 0),
    void 0 === o && (o = this.length),
    r < 0 || e > t.length || n < 0 || o > this.length)
        throw new RangeError("out of range index");
    if (n >= o && r >= e)
        return 0;
    if (n >= o)
        return -1;
    if (r >= e)
        return 1;
    if (this === t)
        return 0;
    for (var i = (o >>>= 0) - (n >>>= 0), s = (e >>>= 0) - (r >>>= 0), f = Math.min(i, s), u = this.slice(n, o), a = t.slice(r, e), h = 0; h < f; ++h)
        if (u[h] !== a[h]) {
            i = u[h],
            s = a[h];
            break
        }
    return i < s ? -1 : s < i ? 1 : 0
}
,
m.prototype.includes = function(t, r, e) {
    return -1 !== this.indexOf(t, r, e)
}
,
m.prototype.indexOf = function(t, r, e) {
    return S(this, t, r, e, !0)
}
,
m.prototype.lastIndexOf = function(t, r, e) {
    return S(this, t, r, e, !1)
}
,
m.prototype.write = function(t, r, e, n) {
    if (void 0 === r)
        n = "utf8",
        e = this.length,
        r = 0;
    else if (void 0 === e && "string" == typeof r)
        n = r,
        e = this.length,
        r = 0;
    else {
        if (!isFinite(r))
            throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        r |= 0,
        isFinite(e) ? (e |= 0,
        void 0 === n && (n = "utf8")) : (n = e,
        e = void 0)
    }
    var o = this.length - r;
    if ((void 0 === e || e > o) && (e = o),
    t.length > 0 && (e < 0 || r < 0) || r > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
    n || (n = "utf8");
    for (var i = !1; ; )
        switch (n) {
        case "hex":
            return I(this, t, r, e);
        case "utf8":
        case "utf-8":
            return Y(this, t, r, e);
        case "ascii":
            return M(this, t, r, e);
        case "latin1":
        case "binary":
            return O(this, t, r, e);
        case "base64":
            return C(this, t, r, e);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return D(this, t, r, e);
        default:
            if (i)
                throw new TypeError("Unknown encoding: " + n);
            n = ("" + n).toLowerCase(),
            i = !0
        }
}
,
m.prototype.toJSON = function() {
    return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
    }
}
;
var x = 4096;
function k(t, r, e) {
    var n = "";
    e = Math.min(t.length, e);
    for (var o = r; o < e; ++o)
        n += String.fromCharCode(127 & t[o]);
    return n
}
function N(t, r, e) {
    var n = "";
    e = Math.min(t.length, e);
    for (var o = r; o < e; ++o)
        n += String.fromCharCode(t[o]);
    return n
}
function q(t, r, e) {
    var n = t.length;
    (!r || r < 0) && (r = 0),
    (!e || e < 0 || e > n) && (e = n);
    for (var o = "", i = r; i < e; ++i)
        o += Q(t[i]);
    return o
}
function z(t, r, e) {
    for (var n = t.slice(r, e), o = "", i = 0; i < n.length; i += 2)
        o += String.fromCharCode(n[i] + 256 * n[i + 1]);
    return o
}
function F(t, r, e) {
    if (t % 1 != 0 || t < 0)
        throw new RangeError("offset is not uint");
    if (t + r > e)
        throw new RangeError("Trying to access beyond buffer length")
}
function W(t, r, e, n, o, i) {
    if (!R(t))
        throw new TypeError('"buffer" argument must be a Buffer instance');
    if (r > o || r < i)
        throw new RangeError('"value" argument is out of bounds');
    if (e + n > t.length)
        throw new RangeError("Index out of range")
}
function J(t, r, e, n) {
    r < 0 && (r = 65535 + r + 1);
    for (var o = 0, i = Math.min(t.length - e, 2); o < i; ++o)
        t[e + o] = (r & 255 << 8 * (n ? o : 1 - o)) >>> 8 * (n ? o : 1 - o)
}
function V(t, r, e, n) {
    r < 0 && (r = 4294967295 + r + 1);
    for (var o = 0, i = Math.min(t.length - e, 4); o < i; ++o)
        t[e + o] = r >>> 8 * (n ? o : 3 - o) & 255
}
function K(t, r, e, n, o, i) {
    if (e + n > t.length)
        throw new RangeError("Index out of range");
    if (e < 0)
        throw new RangeError("Index out of range")
}
function Z(t, r, e, n, o) {
    return o || K(t, 0, e, 4),
    p(t, r, e, n, 23, 4),
    e + 4
}
function G(t, r, e, n, o) {
    return o || K(t, 0, e, 8),
    p(t, r, e, n, 52, 8),
    e + 8
}
m.prototype.slice = function(t, r) {
    var e, n = this.length;
    if ((t = ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n),
    (r = void 0 === r ? n : ~~r) < 0 ? (r += n) < 0 && (r = 0) : r > n && (r = n),
    r < t && (r = t),
    m.TYPED_ARRAY_SUPPORT)
        (e = this.subarray(t, r)).__proto__ = m.prototype;
    else {
        var o = r - t;
        e = new m(o,void 0);
        for (var i = 0; i < o; ++i)
            e[i] = this[i + t]
    }
    return e
}
,
m.prototype.readUIntLE = function(t, r, e) {
    t |= 0,
    r |= 0,
    e || F(t, r, this.length);
    for (var n = this[t], o = 1, i = 0; ++i < r && (o *= 256); )
        n += this[t + i] * o;
    return n
}
,
m.prototype.readUIntBE = function(t, r, e) {
    t |= 0,
    r |= 0,
    e || F(t, r, this.length);
    for (var n = this[t + --r], o = 1; r > 0 && (o *= 256); )
        n += this[t + --r] * o;
    return n
}
,
m.prototype.readUInt8 = function(t, r) {
    return r || F(t, 1, this.length),
    this[t]
}
,
m.prototype.readUInt16LE = function(t, r) {
    return r || F(t, 2, this.length),
    this[t] | this[t + 1] << 8
}
,
m.prototype.readUInt16BE = function(t, r) {
    return r || F(t, 2, this.length),
    this[t] << 8 | this[t + 1]
}
,
m.prototype.readUInt32LE = function(t, r) {
    return r || F(t, 4, this.length),
    (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
}
,
m.prototype.readUInt32BE = function(t, r) {
    return r || F(t, 4, this.length),
    16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
}
,
m.prototype.readIntLE = function(t, r, e) {
    t |= 0,
    r |= 0,
    e || F(t, r, this.length);
    for (var n = this[t], o = 1, i = 0; ++i < r && (o *= 256); )
        n += this[t + i] * o;
    return n >= (o *= 128) && (n -= Math.pow(2, 8 * r)),
    n
}
,
m.prototype.readIntBE = function(t, r, e) {
    t |= 0,
    r |= 0,
    e || F(t, r, this.length);
    for (var n = r, o = 1, i = this[t + --n]; n > 0 && (o *= 256); )
        i += this[t + --n] * o;
    return i >= (o *= 128) && (i -= Math.pow(2, 8 * r)),
    i
}
,
m.prototype.readInt8 = function(t, r) {
    return r || F(t, 1, this.length),
    128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
}
,
m.prototype.readInt16LE = function(t, r) {
    r || F(t, 2, this.length);
    var e = this[t] | this[t + 1] << 8;
    return 32768 & e ? 4294901760 | e : e
}
,
m.prototype.readInt16BE = function(t, r) {
    r || F(t, 2, this.length);
    var e = this[t + 1] | this[t] << 8;
    return 32768 & e ? 4294901760 | e : e
}
,
m.prototype.readInt32LE = function(t, r) {
    return r || F(t, 4, this.length),
    this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
}
,
m.prototype.readInt32BE = function(t, r) {
    return r || F(t, 4, this.length),
    this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
}
,
m.prototype.readFloatLE = function(t, r) {
    return r || F(t, 4, this.length),
    l(this, t, !0, 23, 4)
}
,
m.prototype.readFloatBE = function(t, r) {
    return r || F(t, 4, this.length),
    l(this, t, !1, 23, 4)
}
,
m.prototype.readDoubleLE = function(t, r) {
    return r || F(t, 8, this.length),
    l(this, t, !0, 52, 8)
}
,
m.prototype.readDoubleBE = function(t, r) {
    return r || F(t, 8, this.length),
    l(this, t, !1, 52, 8)
}
,
m.prototype.writeUIntLE = function(t, r, e, n) {
    (t = +t,
    r |= 0,
    e |= 0,
    n) || W(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);
    var o = 1
      , i = 0;
    for (this[r] = 255 & t; ++i < e && (o *= 256); )
        this[r + i] = t / o & 255;
    return r + e
}
,
m.prototype.writeUIntBE = function(t, r, e, n) {
    (t = +t,
    r |= 0,
    e |= 0,
    n) || W(this, t, r, e, Math.pow(2, 8 * e) - 1, 0);
    var o = e - 1
      , i = 1;
    for (this[r + o] = 255 & t; --o >= 0 && (i *= 256); )
        this[r + o] = t / i & 255;
    return r + e
}
,
m.prototype.writeUInt8 = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 1, 255, 0),
    m.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
    this[r] = 255 & t,
    r + 1
}
,
m.prototype.writeUInt16LE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 2, 65535, 0),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t,
    this[r + 1] = t >>> 8) : J(this, t, r, !0),
    r + 2
}
,
m.prototype.writeUInt16BE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 2, 65535, 0),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 8,
    this[r + 1] = 255 & t) : J(this, t, r, !1),
    r + 2
}
,
m.prototype.writeUInt32LE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 4, 4294967295, 0),
    m.TYPED_ARRAY_SUPPORT ? (this[r + 3] = t >>> 24,
    this[r + 2] = t >>> 16,
    this[r + 1] = t >>> 8,
    this[r] = 255 & t) : V(this, t, r, !0),
    r + 4
}
,
m.prototype.writeUInt32BE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 4, 4294967295, 0),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 24,
    this[r + 1] = t >>> 16,
    this[r + 2] = t >>> 8,
    this[r + 3] = 255 & t) : V(this, t, r, !1),
    r + 4
}
,
m.prototype.writeIntLE = function(t, r, e, n) {
    if (t = +t,
    r |= 0,
    !n) {
        var o = Math.pow(2, 8 * e - 1);
        W(this, t, r, e, o - 1, -o)
    }
    var i = 0
      , s = 1
      , f = 0;
    for (this[r] = 255 & t; ++i < e && (s *= 256); )
        t < 0 && 0 === f && 0 !== this[r + i - 1] && (f = 1),
        this[r + i] = (t / s >> 0) - f & 255;
    return r + e
}
,
m.prototype.writeIntBE = function(t, r, e, n) {
    if (t = +t,
    r |= 0,
    !n) {
        var o = Math.pow(2, 8 * e - 1);
        W(this, t, r, e, o - 1, -o)
    }
    var i = e - 1
      , s = 1
      , f = 0;
    for (this[r + i] = 255 & t; --i >= 0 && (s *= 256); )
        t < 0 && 0 === f && 0 !== this[r + i + 1] && (f = 1),
        this[r + i] = (t / s >> 0) - f & 255;
    return r + e
}
,
m.prototype.writeInt8 = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 1, 127, -128),
    m.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
    t < 0 && (t = 255 + t + 1),
    this[r] = 255 & t,
    r + 1
}
,
m.prototype.writeInt16LE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 2, 32767, -32768),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t,
    this[r + 1] = t >>> 8) : J(this, t, r, !0),
    r + 2
}
,
m.prototype.writeInt16BE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 2, 32767, -32768),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 8,
    this[r + 1] = 255 & t) : J(this, t, r, !1),
    r + 2
}
,
m.prototype.writeInt32LE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 4, 2147483647, -2147483648),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = 255 & t,
    this[r + 1] = t >>> 8,
    this[r + 2] = t >>> 16,
    this[r + 3] = t >>> 24) : V(this, t, r, !0),
    r + 4
}
,
m.prototype.writeInt32BE = function(t, r, e) {
    return t = +t,
    r |= 0,
    e || W(this, t, r, 4, 2147483647, -2147483648),
    t < 0 && (t = 4294967295 + t + 1),
    m.TYPED_ARRAY_SUPPORT ? (this[r] = t >>> 24,
    this[r + 1] = t >>> 16,
    this[r + 2] = t >>> 8,
    this[r + 3] = 255 & t) : V(this, t, r, !1),
    r + 4
}
,
m.prototype.writeFloatLE = function(t, r, e) {
    return Z(this, t, r, !0, e)
}
,
m.prototype.writeFloatBE = function(t, r, e) {
    return Z(this, t, r, !1, e)
}
,
m.prototype.writeDoubleLE = function(t, r, e) {
    return G(this, t, r, !0, e)
}
,
m.prototype.writeDoubleBE = function(t, r, e) {
    return G(this, t, r, !1, e)
}
,
m.prototype.copy = function(t, r, e, n) {
    if (e || (e = 0),
    n || 0 === n || (n = this.length),
    r >= t.length && (r = t.length),
    r || (r = 0),
    n > 0 && n < e && (n = e),
    n === e)
        return 0;
    if (0 === t.length || 0 === this.length)
        return 0;
    if (r < 0)
        throw new RangeError("targetStart out of bounds");
    if (e < 0 || e >= this.length)
        throw new RangeError("sourceStart out of bounds");
    if (n < 0)
        throw new RangeError("sourceEnd out of bounds");
    n > this.length && (n = this.length),
    t.length - r < n - e && (n = t.length - r + e);
    var o, i = n - e;
    if (this === t && e < r && r < n)
        for (o = i - 1; o >= 0; --o)
            t[o + r] = this[o + e];
    else if (i < 1e3 || !m.TYPED_ARRAY_SUPPORT)
        for (o = 0; o < i; ++o)
            t[o + r] = this[o + e];
    else
        Uint8Array.prototype.set.call(t, this.subarray(e, e + i), r);
    return i
}
,
m.prototype.fill = function(t, r, e, n) {
    if ("string" == typeof t) {
        if ("string" == typeof r ? (n = r,
        r = 0,
        e = this.length) : "string" == typeof e && (n = e,
        e = this.length),
        1 === t.length) {
            var o = t.charCodeAt(0);
            o < 256 && (t = o)
        }
        if (void 0 !== n && "string" != typeof n)
            throw new TypeError("encoding must be a string");
        if ("string" == typeof n && !m.isEncoding(n))
            throw new TypeError("Unknown encoding: " + n)
    } else
        "number" == typeof t && (t &= 255);
    if (r < 0 || this.length < r || this.length < e)
        throw new RangeError("Out of range index");
    if (e <= r)
        return this;
    var i;
    if (r >>>= 0,
    e = void 0 === e ? this.length : e >>> 0,
    t || (t = 0),
    "number" == typeof t)
        for (i = r; i < e; ++i)
            this[i] = t;
    else {
        var s = R(t) ? t : X(new m(t,n).toString())
          , f = s.length;
        for (i = 0; i < e - r; ++i)
            this[i + r] = s[i % f]
    }
    return this
}
;
var H = /[^+\/0-9A-Za-z-_]/g;
function Q(t) {
    return t < 16 ? "0" + t.toString(16) : t.toString(16)
}
function X(t, r) {
    var e;
    r = r || 1 / 0;
    for (var n = t.length, o = null, i = [], s = 0; s < n; ++s) {
        if ((e = t.charCodeAt(s)) > 55295 && e < 57344) {
            if (!o) {
                if (e > 56319) {
                    (r -= 3) > -1 && i.push(239, 191, 189);
                    continue
                }
                if (s + 1 === n) {
                    (r -= 3) > -1 && i.push(239, 191, 189);
                    continue
                }
                o = e;
                continue
            }
            if (e < 56320) {
                (r -= 3) > -1 && i.push(239, 191, 189),
                o = e;
                continue
            }
            e = 65536 + (o - 55296 << 10 | e - 56320)
        } else
            o && (r -= 3) > -1 && i.push(239, 191, 189);
        if (o = null,
        e < 128) {
            if ((r -= 1) < 0)
                break;
            i.push(e)
        } else if (e < 2048) {
            if ((r -= 2) < 0)
                break;
            i.push(e >> 6 | 192, 63 & e | 128)
        } else if (e < 65536) {
            if ((r -= 3) < 0)
                break;
            i.push(e >> 12 | 224, e >> 6 & 63 | 128, 63 & e | 128)
        } else {
            if (!(e < 1114112))
                throw new Error("Invalid code point");
            if ((r -= 4) < 0)
                break;
            i.push(e >> 18 | 240, e >> 12 & 63 | 128, e >> 6 & 63 | 128, 63 & e | 128)
        }
    }
    return i
}
function $(t) {
    return function(t) {
        var r, e, n, o, i, h;
        u || a();
        var c = t.length;
        if (c % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
        i = "=" === t[c - 2] ? 2 : "=" === t[c - 1] ? 1 : 0,
        h = new f(3 * c / 4 - i),
        n = i > 0 ? c - 4 : c;
        var l = 0;
        for (r = 0,
        e = 0; r < n; r += 4,
        e += 3)
            o = s[t.charCodeAt(r)] << 18 | s[t.charCodeAt(r + 1)] << 12 | s[t.charCodeAt(r + 2)] << 6 | s[t.charCodeAt(r + 3)],
            h[l++] = o >> 16 & 255,
            h[l++] = o >> 8 & 255,
            h[l++] = 255 & o;
        return 2 === i ? (o = s[t.charCodeAt(r)] << 2 | s[t.charCodeAt(r + 1)] >> 4,
        h[l++] = 255 & o) : 1 === i && (o = s[t.charCodeAt(r)] << 10 | s[t.charCodeAt(r + 1)] << 4 | s[t.charCodeAt(r + 2)] >> 2,
        h[l++] = o >> 8 & 255,
        h[l++] = 255 & o),
        h
    }(function(t) {
        if ((t = function(t) {
            return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "")
        }(t).replace(H, "")).length < 2)
            return "";
        for (; t.length % 4 != 0; )
            t += "=";
        return t
    }(t))
}
function tt(t, r, e, n) {
    for (var o = 0; o < n && !(o + e >= r.length || o >= t.length); ++o)
        r[o + e] = t[o];
    return o
}
function rt(t) {
    return !!t.constructor && "function" == typeof t.constructor.isBuffer && t.constructor.isBuffer(t)
}
var et = {}
  , nt = {};
Object.defineProperty(nt, "__esModule", {
    value: !0
});
const ot = {};
let it;
nt.wordlists = ot;
nt._default = it;
try {
    nt._default = it = [
        "abandon",
        "ability",
        "able",
        "about",
        "above",
        "absent",
        "absorb",
        "abstract",
        "absurd",
        "abuse",
        "access",
        "accident",
        "account",
        "accuse",
        "achieve",
        "acid",
        "acoustic",
        "acquire",
        "across",
        "act",
        "action",
        "actor",
        "actress",
        "actual",
        "adapt",
        "add",
        "addict",
        "address",
        "adjust",
        "admit",
        "adult",
        "advance",
        "advice",
        "aerobic",
        "affair",
        "afford",
        "afraid",
        "again",
        "age",
        "agent",
        "agree",
        "ahead",
        "aim",
        "air",
        "airport",
        "aisle",
        "alarm",
        "album",
        "alcohol",
        "alert",
        "alien",
        "all",
        "alley",
        "allow",
        "almost",
        "alone",
        "alpha",
        "already",
        "also",
        "alter",
        "always",
        "amateur",
        "amazing",
        "among",
        "amount",
        "amused",
        "analyst",
        "anchor",
        "ancient",
        "anger",
        "angle",
        "angry",
        "animal",
        "ankle",
        "announce",
        "annual",
        "another",
        "answer",
        "antenna",
        "antique",
        "anxiety",
        "any",
        "apart",
        "apology",
        "appear",
        "apple",
        "approve",
        "april",
        "arch",
        "arctic",
        "area",
        "arena",
        "argue",
        "arm",
        "armed",
        "armor",
        "army",
        "around",
        "arrange",
        "arrest",
        "arrive",
        "arrow",
        "art",
        "artefact",
        "artist",
        "artwork",
        "ask",
        "aspect",
        "assault",
        "asset",
        "assist",
        "assume",
        "asthma",
        "athlete",
        "atom",
        "attack",
        "attend",
        "attitude",
        "attract",
        "auction",
        "audit",
        "august",
        "aunt",
        "author",
        "auto",
        "autumn",
        "average",
        "avocado",
        "avoid",
        "awake",
        "aware",
        "away",
        "awesome",
        "awful",
        "awkward",
        "axis",
        "baby",
        "bachelor",
        "bacon",
        "badge",
        "bag",
        "balance",
        "balcony",
        "ball",
        "bamboo",
        "banana",
        "banner",
        "bar",
        "barely",
        "bargain",
        "barrel",
        "base",
        "basic",
        "basket",
        "battle",
        "beach",
        "bean",
        "beauty",
        "because",
        "become",
        "beef",
        "before",
        "begin",
        "behave",
        "behind",
        "believe",
        "below",
        "belt",
        "bench",
        "benefit",
        "best",
        "betray",
        "better",
        "between",
        "beyond",
        "bicycle",
        "bid",
        "bike",
        "bind",
        "biology",
        "bird",
        "birth",
        "bitter",
        "black",
        "blade",
        "blame",
        "blanket",
        "blast",
        "bleak",
        "bless",
        "blind",
        "blood",
        "blossom",
        "blouse",
        "blue",
        "blur",
        "blush",
        "board",
        "boat",
        "body",
        "boil",
        "bomb",
        "bone",
        "bonus",
        "book",
        "boost",
        "border",
        "boring",
        "borrow",
        "boss",
        "bottom",
        "bounce",
        "box",
        "boy",
        "bracket",
        "brain",
        "brand",
        "brass",
        "brave",
        "bread",
        "breeze",
        "brick",
        "bridge",
        "brief",
        "bright",
        "bring",
        "brisk",
        "broccoli",
        "broken",
        "bronze",
        "broom",
        "brother",
        "brown",
        "brush",
        "bubble",
        "buddy",
        "budget",
        "buffalo",
        "build",
        "bulb",
        "bulk",
        "bullet",
        "bundle",
        "bunker",
        "burden",
        "burger",
        "burst",
        "bus",
        "business",
        "busy",
        "butter",
        "buyer",
        "buzz",
        "cabbage",
        "cabin",
        "cable",
        "cactus",
        "cage",
        "cake",
        "call",
        "calm",
        "camera",
        "camp",
        "can",
        "canal",
        "cancel",
        "candy",
        "cannon",
        "canoe",
        "canvas",
        "canyon",
        "capable",
        "capital",
        "captain",
        "car",
        "carbon",
        "card",
        "cargo",
        "carpet",
        "carry",
        "cart",
        "case",
        "cash",
        "casino",
        "castle",
        "casual",
        "cat",
        "catalog",
        "catch",
        "category",
        "cattle",
        "caught",
        "cause",
        "caution",
        "cave",
        "ceiling",
        "celery",
        "cement",
        "census",
        "century",
        "cereal",
        "certain",
        "chair",
        "chalk",
        "champion",
        "change",
        "chaos",
        "chapter",
        "charge",
        "chase",
        "chat",
        "cheap",
        "check",
        "cheese",
        "chef",
        "cherry",
        "chest",
        "chicken",
        "chief",
        "child",
        "chimney",
        "choice",
        "choose",
        "chronic",
        "chuckle",
        "chunk",
        "churn",
        "cigar",
        "cinnamon",
        "circle",
        "citizen",
        "city",
        "civil",
        "claim",
        "clap",
        "clarify",
        "claw",
        "clay",
        "clean",
        "clerk",
        "clever",
        "click",
        "client",
        "cliff",
        "climb",
        "clinic",
        "clip",
        "clock",
        "clog",
        "close",
        "cloth",
        "cloud",
        "clown",
        "club",
        "clump",
        "cluster",
        "clutch",
        "coach",
        "coast",
        "coconut",
        "code",
        "coffee",
        "coil",
        "coin",
        "collect",
        "color",
        "column",
        "combine",
        "come",
        "comfort",
        "comic",
        "common",
        "company",
        "concert",
        "conduct",
        "confirm",
        "congress",
        "connect",
        "consider",
        "control",
        "convince",
        "cook",
        "cool",
        "copper",
        "copy",
        "coral",
        "core",
        "corn",
        "correct",
        "cost",
        "cotton",
        "couch",
        "country",
        "couple",
        "course",
        "cousin",
        "cover",
        "coyote",
        "crack",
        "cradle",
        "craft",
        "cram",
        "crane",
        "crash",
        "crater",
        "crawl",
        "crazy",
        "cream",
        "credit",
        "creek",
        "crew",
        "cricket",
        "crime",
        "crisp",
        "critic",
        "crop",
        "cross",
        "crouch",
        "crowd",
        "crucial",
        "cruel",
        "cruise",
        "crumble",
        "crunch",
        "crush",
        "cry",
        "crystal",
        "cube",
        "culture",
        "cup",
        "cupboard",
        "curious",
        "current",
        "curtain",
        "curve",
        "cushion",
        "custom",
        "cute",
        "cycle",
        "dad",
        "damage",
        "damp",
        "dance",
        "danger",
        "daring",
        "dash",
        "daughter",
        "dawn",
        "day",
        "deal",
        "debate",
        "debris",
        "decade",
        "december",
        "decide",
        "decline",
        "decorate",
        "decrease",
        "deer",
        "defense",
        "define",
        "defy",
        "degree",
        "delay",
        "deliver",
        "demand",
        "demise",
        "denial",
        "dentist",
        "deny",
        "depart",
        "depend",
        "deposit",
        "depth",
        "deputy",
        "derive",
        "describe",
        "desert",
        "design",
        "desk",
        "despair",
        "destroy",
        "detail",
        "detect",
        "develop",
        "device",
        "devote",
        "diagram",
        "dial",
        "diamond",
        "diary",
        "dice",
        "diesel",
        "diet",
        "differ",
        "digital",
        "dignity",
        "dilemma",
        "dinner",
        "dinosaur",
        "direct",
        "dirt",
        "disagree",
        "discover",
        "disease",
        "dish",
        "dismiss",
        "disorder",
        "display",
        "distance",
        "divert",
        "divide",
        "divorce",
        "dizzy",
        "doctor",
        "document",
        "dog",
        "doll",
        "dolphin",
        "domain",
        "donate",
        "donkey",
        "donor",
        "door",
        "dose",
        "double",
        "dove",
        "draft",
        "dragon",
        "drama",
        "drastic",
        "draw",
        "dream",
        "dress",
        "drift",
        "drill",
        "drink",
        "drip",
        "drive",
        "drop",
        "drum",
        "dry",
        "duck",
        "dumb",
        "dune",
        "during",
        "dust",
        "dutch",
        "duty",
        "dwarf",
        "dynamic",
        "eager",
        "eagle",
        "early",
        "earn",
        "earth",
        "easily",
        "east",
        "easy",
        "echo",
        "ecology",
        "economy",
        "edge",
        "edit",
        "educate",
        "effort",
        "egg",
        "eight",
        "either",
        "elbow",
        "elder",
        "electric",
        "elegant",
        "element",
        "elephant",
        "elevator",
        "elite",
        "else",
        "embark",
        "embody",
        "embrace",
        "emerge",
        "emotion",
        "employ",
        "empower",
        "empty",
        "enable",
        "enact",
        "end",
        "endless",
        "endorse",
        "enemy",
        "energy",
        "enforce",
        "engage",
        "engine",
        "enhance",
        "enjoy",
        "enlist",
        "enough",
        "enrich",
        "enroll",
        "ensure",
        "enter",
        "entire",
        "entry",
        "envelope",
        "episode",
        "equal",
        "equip",
        "era",
        "erase",
        "erode",
        "erosion",
        "error",
        "erupt",
        "escape",
        "essay",
        "essence",
        "estate",
        "eternal",
        "ethics",
        "evidence",
        "evil",
        "evoke",
        "evolve",
        "exact",
        "example",
        "excess",
        "exchange",
        "excite",
        "exclude",
        "excuse",
        "execute",
        "exercise",
        "exhaust",
        "exhibit",
        "exile",
        "exist",
        "exit",
        "exotic",
        "expand",
        "expect",
        "expire",
        "explain",
        "expose",
        "express",
        "extend",
        "extra",
        "eye",
        "eyebrow",
        "fabric",
        "face",
        "faculty",
        "fade",
        "faint",
        "faith",
        "fall",
        "false",
        "fame",
        "family",
        "famous",
        "fan",
        "fancy",
        "fantasy",
        "farm",
        "fashion",
        "fat",
        "fatal",
        "father",
        "fatigue",
        "fault",
        "favorite",
        "feature",
        "february",
        "federal",
        "fee",
        "feed",
        "feel",
        "female",
        "fence",
        "festival",
        "fetch",
        "fever",
        "few",
        "fiber",
        "fiction",
        "field",
        "figure",
        "file",
        "film",
        "filter",
        "final",
        "find",
        "fine",
        "finger",
        "finish",
        "fire",
        "firm",
        "first",
        "fiscal",
        "fish",
        "fit",
        "fitness",
        "fix",
        "flag",
        "flame",
        "flash",
        "flat",
        "flavor",
        "flee",
        "flight",
        "flip",
        "float",
        "flock",
        "floor",
        "flower",
        "fluid",
        "flush",
        "fly",
        "foam",
        "focus",
        "fog",
        "foil",
        "fold",
        "follow",
        "food",
        "foot",
        "force",
        "forest",
        "forget",
        "fork",
        "fortune",
        "forum",
        "forward",
        "fossil",
        "foster",
        "found",
        "fox",
        "fragile",
        "frame",
        "frequent",
        "fresh",
        "friend",
        "fringe",
        "frog",
        "front",
        "frost",
        "frown",
        "frozen",
        "fruit",
        "fuel",
        "fun",
        "funny",
        "furnace",
        "fury",
        "future",
        "gadget",
        "gain",
        "galaxy",
        "gallery",
        "game",
        "gap",
        "garage",
        "garbage",
        "garden",
        "garlic",
        "garment",
        "gas",
        "gasp",
        "gate",
        "gather",
        "gauge",
        "gaze",
        "general",
        "genius",
        "genre",
        "gentle",
        "genuine",
        "gesture",
        "ghost",
        "giant",
        "gift",
        "giggle",
        "ginger",
        "giraffe",
        "girl",
        "give",
        "glad",
        "glance",
        "glare",
        "glass",
        "glide",
        "glimpse",
        "globe",
        "gloom",
        "glory",
        "glove",
        "glow",
        "glue",
        "goat",
        "goddess",
        "gold",
        "good",
        "goose",
        "gorilla",
        "gospel",
        "gossip",
        "govern",
        "gown",
        "grab",
        "grace",
        "grain",
        "grant",
        "grape",
        "grass",
        "gravity",
        "great",
        "green",
        "grid",
        "grief",
        "grit",
        "grocery",
        "group",
        "grow",
        "grunt",
        "guard",
        "guess",
        "guide",
        "guilt",
        "guitar",
        "gun",
        "gym",
        "habit",
        "hair",
        "half",
        "hammer",
        "hamster",
        "hand",
        "happy",
        "harbor",
        "hard",
        "harsh",
        "harvest",
        "hat",
        "have",
        "hawk",
        "hazard",
        "head",
        "health",
        "heart",
        "heavy",
        "hedgehog",
        "height",
        "hello",
        "helmet",
        "help",
        "hen",
        "hero",
        "hidden",
        "high",
        "hill",
        "hint",
        "hip",
        "hire",
        "history",
        "hobby",
        "hockey",
        "hold",
        "hole",
        "holiday",
        "hollow",
        "home",
        "honey",
        "hood",
        "hope",
        "horn",
        "horror",
        "horse",
        "hospital",
        "host",
        "hotel",
        "hour",
        "hover",
        "hub",
        "huge",
        "human",
        "humble",
        "humor",
        "hundred",
        "hungry",
        "hunt",
        "hurdle",
        "hurry",
        "hurt",
        "husband",
        "hybrid",
        "ice",
        "icon",
        "idea",
        "identify",
        "idle",
        "ignore",
        "ill",
        "illegal",
        "illness",
        "image",
        "imitate",
        "immense",
        "immune",
        "impact",
        "impose",
        "improve",
        "impulse",
        "inch",
        "include",
        "income",
        "increase",
        "index",
        "indicate",
        "indoor",
        "industry",
        "infant",
        "inflict",
        "inform",
        "inhale",
        "inherit",
        "initial",
        "inject",
        "injury",
        "inmate",
        "inner",
        "innocent",
        "input",
        "inquiry",
        "insane",
        "insect",
        "inside",
        "inspire",
        "install",
        "intact",
        "interest",
        "into",
        "invest",
        "invite",
        "involve",
        "iron",
        "island",
        "isolate",
        "issue",
        "item",
        "ivory",
        "jacket",
        "jaguar",
        "jar",
        "jazz",
        "jealous",
        "jeans",
        "jelly",
        "jewel",
        "job",
        "join",
        "joke",
        "journey",
        "joy",
        "judge",
        "juice",
        "jump",
        "jungle",
        "junior",
        "junk",
        "just",
        "kangaroo",
        "keen",
        "keep",
        "ketchup",
        "key",
        "kick",
        "kid",
        "kidney",
        "kind",
        "kingdom",
        "kiss",
        "kit",
        "kitchen",
        "kite",
        "kitten",
        "kiwi",
        "knee",
        "knife",
        "knock",
        "know",
        "lab",
        "label",
        "labor",
        "ladder",
        "lady",
        "lake",
        "lamp",
        "language",
        "laptop",
        "large",
        "later",
        "latin",
        "laugh",
        "laundry",
        "lava",
        "law",
        "lawn",
        "lawsuit",
        "layer",
        "lazy",
        "leader",
        "leaf",
        "learn",
        "leave",
        "lecture",
        "left",
        "leg",
        "legal",
        "legend",
        "leisure",
        "lemon",
        "lend",
        "length",
        "lens",
        "leopard",
        "lesson",
        "letter",
        "level",
        "liar",
        "liberty",
        "library",
        "license",
        "life",
        "lift",
        "light",
        "like",
        "limb",
        "limit",
        "link",
        "lion",
        "liquid",
        "list",
        "little",
        "live",
        "lizard",
        "load",
        "loan",
        "lobster",
        "local",
        "lock",
        "logic",
        "lonely",
        "long",
        "loop",
        "lottery",
        "loud",
        "lounge",
        "love",
        "loyal",
        "lucky",
        "luggage",
        "lumber",
        "lunar",
        "lunch",
        "luxury",
        "lyrics",
        "machine",
        "mad",
        "magic",
        "magnet",
        "maid",
        "mail",
        "main",
        "major",
        "make",
        "mammal",
        "man",
        "manage",
        "mandate",
        "mango",
        "mansion",
        "manual",
        "maple",
        "marble",
        "march",
        "margin",
        "marine",
        "market",
        "marriage",
        "mask",
        "mass",
        "master",
        "match",
        "material",
        "math",
        "matrix",
        "matter",
        "maximum",
        "maze",
        "meadow",
        "mean",
        "measure",
        "meat",
        "mechanic",
        "medal",
        "media",
        "melody",
        "melt",
        "member",
        "memory",
        "mention",
        "menu",
        "mercy",
        "merge",
        "merit",
        "merry",
        "mesh",
        "message",
        "metal",
        "method",
        "middle",
        "midnight",
        "milk",
        "million",
        "mimic",
        "mind",
        "minimum",
        "minor",
        "minute",
        "miracle",
        "mirror",
        "misery",
        "miss",
        "mistake",
        "mix",
        "mixed",
        "mixture",
        "mobile",
        "model",
        "modify",
        "mom",
        "moment",
        "monitor",
        "monkey",
        "monster",
        "month",
        "moon",
        "moral",
        "more",
        "morning",
        "mosquito",
        "mother",
        "motion",
        "motor",
        "mountain",
        "mouse",
        "move",
        "movie",
        "much",
        "muffin",
        "mule",
        "multiply",
        "muscle",
        "museum",
        "mushroom",
        "music",
        "must",
        "mutual",
        "myself",
        "mystery",
        "myth",
        "naive",
        "name",
        "napkin",
        "narrow",
        "nasty",
        "nation",
        "nature",
        "near",
        "neck",
        "need",
        "negative",
        "neglect",
        "neither",
        "nephew",
        "nerve",
        "nest",
        "net",
        "network",
        "neutral",
        "never",
        "news",
        "next",
        "nice",
        "night",
        "noble",
        "noise",
        "nominee",
        "noodle",
        "normal",
        "north",
        "nose",
        "notable",
        "note",
        "nothing",
        "notice",
        "novel",
        "now",
        "nuclear",
        "number",
        "nurse",
        "nut",
        "oak",
        "obey",
        "object",
        "oblige",
        "obscure",
        "observe",
        "obtain",
        "obvious",
        "occur",
        "ocean",
        "october",
        "odor",
        "off",
        "offer",
        "office",
        "often",
        "oil",
        "okay",
        "old",
        "olive",
        "olympic",
        "omit",
        "once",
        "one",
        "onion",
        "online",
        "only",
        "open",
        "opera",
        "opinion",
        "oppose",
        "option",
        "orange",
        "orbit",
        "orchard",
        "order",
        "ordinary",
        "organ",
        "orient",
        "original",
        "orphan",
        "ostrich",
        "other",
        "outdoor",
        "outer",
        "output",
        "outside",
        "oval",
        "oven",
        "over",
        "own",
        "owner",
        "oxygen",
        "oyster",
        "ozone",
        "pact",
        "paddle",
        "page",
        "pair",
        "palace",
        "palm",
        "panda",
        "panel",
        "panic",
        "panther",
        "paper",
        "parade",
        "parent",
        "park",
        "parrot",
        "party",
        "pass",
        "patch",
        "path",
        "patient",
        "patrol",
        "pattern",
        "pause",
        "pave",
        "payment",
        "peace",
        "peanut",
        "pear",
        "peasant",
        "pelican",
        "pen",
        "penalty",
        "pencil",
        "people",
        "pepper",
        "perfect",
        "permit",
        "person",
        "pet",
        "phone",
        "photo",
        "phrase",
        "physical",
        "piano",
        "picnic",
        "picture",
        "piece",
        "pig",
        "pigeon",
        "pill",
        "pilot",
        "pink",
        "pioneer",
        "pipe",
        "pistol",
        "pitch",
        "pizza",
        "place",
        "planet",
        "plastic",
        "plate",
        "play",
        "please",
        "pledge",
        "pluck",
        "plug",
        "plunge",
        "poem",
        "poet",
        "point",
        "polar",
        "pole",
        "police",
        "pond",
        "pony",
        "pool",
        "popular",
        "portion",
        "position",
        "possible",
        "post",
        "potato",
        "pottery",
        "poverty",
        "powder",
        "power",
        "practice",
        "praise",
        "predict",
        "prefer",
        "prepare",
        "present",
        "pretty",
        "prevent",
        "price",
        "pride",
        "primary",
        "print",
        "priority",
        "prison",
        "private",
        "prize",
        "problem",
        "process",
        "produce",
        "profit",
        "program",
        "project",
        "promote",
        "proof",
        "property",
        "prosper",
        "protect",
        "proud",
        "provide",
        "public",
        "pudding",
        "pull",
        "pulp",
        "pulse",
        "pumpkin",
        "punch",
        "pupil",
        "puppy",
        "purchase",
        "purity",
        "purpose",
        "purse",
        "push",
        "put",
        "puzzle",
        "pyramid",
        "quality",
        "quantum",
        "quarter",
        "question",
        "quick",
        "quit",
        "quiz",
        "quote",
        "rabbit",
        "raccoon",
        "race",
        "rack",
        "radar",
        "radio",
        "rail",
        "rain",
        "raise",
        "rally",
        "ramp",
        "ranch",
        "random",
        "range",
        "rapid",
        "rare",
        "rate",
        "rather",
        "raven",
        "raw",
        "razor",
        "ready",
        "real",
        "reason",
        "rebel",
        "rebuild",
        "recall",
        "receive",
        "recipe",
        "record",
        "recycle",
        "reduce",
        "reflect",
        "reform",
        "refuse",
        "region",
        "regret",
        "regular",
        "reject",
        "relax",
        "release",
        "relief",
        "rely",
        "remain",
        "remember",
        "remind",
        "remove",
        "render",
        "renew",
        "rent",
        "reopen",
        "repair",
        "repeat",
        "replace",
        "report",
        "require",
        "rescue",
        "resemble",
        "resist",
        "resource",
        "response",
        "result",
        "retire",
        "retreat",
        "return",
        "reunion",
        "reveal",
        "review",
        "reward",
        "rhythm",
        "rib",
        "ribbon",
        "rice",
        "rich",
        "ride",
        "ridge",
        "rifle",
        "right",
        "rigid",
        "ring",
        "riot",
        "ripple",
        "risk",
        "ritual",
        "rival",
        "river",
        "road",
        "roast",
        "robot",
        "robust",
        "rocket",
        "romance",
        "roof",
        "rookie",
        "room",
        "rose",
        "rotate",
        "rough",
        "round",
        "route",
        "royal",
        "rubber",
        "rude",
        "rug",
        "rule",
        "run",
        "runway",
        "rural",
        "sad",
        "saddle",
        "sadness",
        "safe",
        "sail",
        "salad",
        "salmon",
        "salon",
        "salt",
        "salute",
        "same",
        "sample",
        "sand",
        "satisfy",
        "satoshi",
        "sauce",
        "sausage",
        "save",
        "say",
        "scale",
        "scan",
        "scare",
        "scatter",
        "scene",
        "scheme",
        "school",
        "science",
        "scissors",
        "scorpion",
        "scout",
        "scrap",
        "screen",
        "script",
        "scrub",
        "sea",
        "search",
        "season",
        "seat",
        "second",
        "secret",
        "section",
        "security",
        "seed",
        "seek",
        "segment",
        "select",
        "sell",
        "seminar",
        "senior",
        "sense",
        "sentence",
        "series",
        "service",
        "session",
        "settle",
        "setup",
        "seven",
        "shadow",
        "shaft",
        "shallow",
        "share",
        "shed",
        "shell",
        "sheriff",
        "shield",
        "shift",
        "shine",
        "ship",
        "shiver",
        "shock",
        "shoe",
        "shoot",
        "shop",
        "short",
        "shoulder",
        "shove",
        "shrimp",
        "shrug",
        "shuffle",
        "shy",
        "sibling",
        "sick",
        "side",
        "siege",
        "sight",
        "sign",
        "silent",
        "silk",
        "silly",
        "silver",
        "similar",
        "simple",
        "since",
        "sing",
        "siren",
        "sister",
        "situate",
        "six",
        "size",
        "skate",
        "sketch",
        "ski",
        "skill",
        "skin",
        "skirt",
        "skull",
        "slab",
        "slam",
        "sleep",
        "slender",
        "slice",
        "slide",
        "slight",
        "slim",
        "slogan",
        "slot",
        "slow",
        "slush",
        "small",
        "smart",
        "smile",
        "smoke",
        "smooth",
        "snack",
        "snake",
        "snap",
        "sniff",
        "snow",
        "soap",
        "soccer",
        "social",
        "sock",
        "soda",
        "soft",
        "solar",
        "soldier",
        "solid",
        "solution",
        "solve",
        "someone",
        "song",
        "soon",
        "sorry",
        "sort",
        "soul",
        "sound",
        "soup",
        "source",
        "south",
        "space",
        "spare",
        "spatial",
        "spawn",
        "speak",
        "special",
        "speed",
        "spell",
        "spend",
        "sphere",
        "spice",
        "spider",
        "spike",
        "spin",
        "spirit",
        "split",
        "spoil",
        "sponsor",
        "spoon",
        "sport",
        "spot",
        "spray",
        "spread",
        "spring",
        "spy",
        "square",
        "squeeze",
        "squirrel",
        "stable",
        "stadium",
        "staff",
        "stage",
        "stairs",
        "stamp",
        "stand",
        "start",
        "state",
        "stay",
        "steak",
        "steel",
        "stem",
        "step",
        "stereo",
        "stick",
        "still",
        "sting",
        "stock",
        "stomach",
        "stone",
        "stool",
        "story",
        "stove",
        "strategy",
        "street",
        "strike",
        "strong",
        "struggle",
        "student",
        "stuff",
        "stumble",
        "style",
        "subject",
        "submit",
        "subway",
        "success",
        "such",
        "sudden",
        "suffer",
        "sugar",
        "suggest",
        "suit",
        "summer",
        "sun",
        "sunny",
        "sunset",
        "super",
        "supply",
        "supreme",
        "sure",
        "surface",
        "surge",
        "surprise",
        "surround",
        "survey",
        "suspect",
        "sustain",
        "swallow",
        "swamp",
        "swap",
        "swarm",
        "swear",
        "sweet",
        "swift",
        "swim",
        "swing",
        "switch",
        "sword",
        "symbol",
        "symptom",
        "syrup",
        "system",
        "table",
        "tackle",
        "tag",
        "tail",
        "talent",
        "talk",
        "tank",
        "tape",
        "target",
        "task",
        "taste",
        "tattoo",
        "taxi",
        "teach",
        "team",
        "tell",
        "ten",
        "tenant",
        "tennis",
        "tent",
        "term",
        "test",
        "text",
        "thank",
        "that",
        "theme",
        "then",
        "theory",
        "there",
        "they",
        "thing",
        "this",
        "thought",
        "three",
        "thrive",
        "throw",
        "thumb",
        "thunder",
        "ticket",
        "tide",
        "tiger",
        "tilt",
        "timber",
        "time",
        "tiny",
        "tip",
        "tired",
        "tissue",
        "title",
        "toast",
        "tobacco",
        "today",
        "toddler",
        "toe",
        "together",
        "toilet",
        "token",
        "tomato",
        "tomorrow",
        "tone",
        "tongue",
        "tonight",
        "tool",
        "tooth",
        "top",
        "topic",
        "topple",
        "torch",
        "tornado",
        "tortoise",
        "toss",
        "total",
        "tourist",
        "toward",
        "tower",
        "town",
        "toy",
        "track",
        "trade",
        "traffic",
        "tragic",
        "train",
        "transfer",
        "trap",
        "trash",
        "travel",
        "tray",
        "treat",
        "tree",
        "trend",
        "trial",
        "tribe",
        "trick",
        "trigger",
        "trim",
        "trip",
        "trophy",
        "trouble",
        "truck",
        "true",
        "truly",
        "trumpet",
        "trust",
        "truth",
        "try",
        "tube",
        "tuition",
        "tumble",
        "tuna",
        "tunnel",
        "turkey",
        "turn",
        "turtle",
        "twelve",
        "twenty",
        "twice",
        "twin",
        "twist",
        "two",
        "type",
        "typical",
        "ugly",
        "umbrella",
        "unable",
        "unaware",
        "uncle",
        "uncover",
        "under",
        "undo",
        "unfair",
        "unfold",
        "unhappy",
        "uniform",
        "unique",
        "unit",
        "universe",
        "unknown",
        "unlock",
        "until",
        "unusual",
        "unveil",
        "update",
        "upgrade",
        "uphold",
        "upon",
        "upper",
        "upset",
        "urban",
        "urge",
        "usage",
        "use",
        "used",
        "useful",
        "useless",
        "usual",
        "utility",
        "vacant",
        "vacuum",
        "vague",
        "valid",
        "valley",
        "valve",
        "van",
        "vanish",
        "vapor",
        "various",
        "vast",
        "vault",
        "vehicle",
        "velvet",
        "vendor",
        "venture",
        "venue",
        "verb",
        "verify",
        "version",
        "very",
        "vessel",
        "veteran",
        "viable",
        "vibrant",
        "vicious",
        "victory",
        "video",
        "view",
        "village",
        "vintage",
        "violin",
        "virtual",
        "virus",
        "visa",
        "visit",
        "visual",
        "vital",
        "vivid",
        "vocal",
        "voice",
        "void",
        "volcano",
        "volume",
        "vote",
        "voyage",
        "wage",
        "wagon",
        "wait",
        "walk",
        "wall",
        "walnut",
        "want",
        "warfare",
        "warm",
        "warrior",
        "wash",
        "wasp",
        "waste",
        "water",
        "wave",
        "way",
        "wealth",
        "weapon",
        "wear",
        "weasel",
        "weather",
        "web",
        "wedding",
        "weekend",
        "weird",
        "welcome",
        "west",
        "wet",
        "whale",
        "what",
        "wheat",
        "wheel",
        "when",
        "where",
        "whip",
        "whisper",
        "wide",
        "width",
        "wife",
        "wild",
        "will",
        "win",
        "window",
        "wine",
        "wing",
        "wink",
        "winner",
        "winter",
        "wire",
        "wisdom",
        "wise",
        "wish",
        "witness",
        "wolf",
        "woman",
        "wonder",
        "wood",
        "wool",
        "word",
        "work",
        "world",
        "worry",
        "worth",
        "wrap",
        "wreck",
        "wrestle",
        "wrist",
        "write",
        "wrong",
        "yard",
        "year",
        "yellow",
        "you",
        "young",
        "youth",
        "zebra",
        "zero",
        "zone",
        "zoo"
    ]
    ,
    ot.english = it,
    ot.EN = it
} catch (t) {}
Object.defineProperty(et, "__esModule", {
    value: !0
});
const st = ''
  , ft = ''
  , ut = ''
  , at = ''
  , ht = nt;
let ct = ht._default;
const lt = "Invalid mnemonic"
  , pt = "Invalid entropy"
  , gt = "Invalid mnemonic checksum"
  , yt = "A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";
function dt(t) {
    return (t || "").normalize("NFKD")
}
function wt(t, r, e) {
    for (; t.length < e; )
        t = r + t;
    return t
}
function mt(t) {
    return parseInt(t, 2)
}
function vt(t) {
    return t.map((t=>wt(t.toString(2), "0", 8))).join("")
}
async function Et(t) {
    const r = 8 * t.length / 32;
    const buffer = Uint8Array.from(t);

    try {
        const hashBuffer = await window.crypto.subtle.digest('SHA-256', buffer);
        const hashArray = Array.from(new Uint8Array(hashBuffer)); // Convert buffer to byte array
        return vt(hashArray).slice(0, r); // Assuming vt() is defined elsewhere
    } catch (e) {
        console.error('Hashing failed:', e);
    }
}

function At(t) {
    return "mnemonic" + (t || "")
}
var bt = et.mnemonicToSeedSync = function(t, r) {
    const e = Uint8Array.from(m.from(dt(t), "utf8"))
      , n = Uint8Array.from(m.from(At(dt(r)), "utf8"))
      , o = ut.pbkdf2(ft.sha512, e, n, {
        c: 2048,
        dkLen: 64
    });
    return m.from(o)
}
;
var _t = et.mnemonicToSeed = async function(t, r) {
    const e = Uint8Array.from(new TextEncoder().encode(dt(t)));
    const n = Uint8Array.from(new TextEncoder().encode(At(dt(r))));

    // Import the password as a CryptoKey
    const key = await window.crypto.subtle.importKey(
        "raw", 
        e, 
        { name: "PBKDF2" },
        false, 
        ["deriveBits"]
    );

    // Define PBKDF2 parameters
    const params = {
        name: "PBKDF2",
        hash: "SHA-256",
        salt: n,
        iterations: 2048
    };

    // Derive bits
    try {
        const derivedBits = await window.crypto.subtle.deriveBits(
            {
                ...params,
                iterations: 2048,
                length: 256 // Length in bits
            },
            key,
            256
        );
        return Uint8Array.from(new Uint8Array(derivedBits));
    } catch (err) {
        console.error('Error in PBKDF2 derivation:', err);
        throw err;
    }
}
;
function Rt(t, r) {
    if (!(r = r || ct))
        throw new Error(yt);
    const e = dt(t).split(" ");
    if (e.length % 3 != 0)
        throw new Error(lt);
    const n = e.map((t=>{
        const e = r.indexOf(t);
        if (-1 === e)
            throw new Error(lt);
        return wt(e.toString(2), "0", 11)
    }
    )).join("")
      , o = 32 * Math.floor(n.length / 33)
      , i = n.slice(0, o)
      , s = n.slice(o)
      , f = i.match(/(.{1,8})/g).map(mt);
    if (f.length < 16)
        throw new Error(pt);
    if (f.length > 32)
        throw new Error(pt);
    if (f.length % 4 != 0)
        throw new Error(pt);
    const u = m.from(f);
    if (Et(u) !== s)
        throw new Error(gt);
    return u.toString("hex")
}
var Tt = et.mnemonicToEntropy = Rt;
function Pt(t, r) {
    if (m.isBuffer(t) || (t = m.from(t, "hex")),
    !(r = r || ct))
        throw new Error(yt);
    if (t.length < 16)
        throw new TypeError(pt);
    if (t.length > 32)
        throw new TypeError(pt);
    if (t.length % 4 != 0)
        throw new TypeError(pt);
    const e = (vt(Array.from(t)) + Et(t)).match(/(.{1,11})/g).map((t=>{
        const e = mt(t);
        return r[e]
    }
    ));
    return "あいこくしん" === r[0] ? e.join("　") : e.join(" ")
}
var Ut = et.entropyToMnemonic = Pt;
var St = et.generateMnemonic = function(t, r, e) {
    if ((t = t || 128) % 32 != 0)
        throw new TypeError('Invalid entropy');

    var generateRandomBytes = function(size) {
        var array = new Uint8Array(size);
        window.crypto.getRandomValues(array);
        return array;
    }

    // Use the generateRandomBytes function instead of at.randomBytes
    return Pt((r = r || generateRandomBytes)(t / 8), e).trim();
}
;
var Bt = et.validateMnemonic = function(t, r) {
    try {
        Rt(t, r)
    } catch (t) {
        return !1
    }
    return !0
}
;
var It = et.setDefaultWordlist = function(t) {
    const r = ht.wordlists[t];
    if (!r)
        throw new Error('Could not find wordlist for language "' + t + '"');
    ct = r
}
;
var Yt = et.getDefaultWordlist = function() {
    if (!ct)
        throw new Error("No Default Wordlist set");
    return Object.keys(ht.wordlists).filter((t=>"JA" !== t && "EN" !== t && ht.wordlists[t].every(((t,r)=>t === ct[r]))))[0]
}
  , Mt = nt
  , Ot = et.wordlists = Mt.wordlists
  , Ct = et.__esModule;